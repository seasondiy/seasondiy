version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: seasondiy-backend
    ports:
      - "8000:8000"
    volumes:
      - ../backend/data:/app/data
      - ../backend/assets:/app/assets
    environment:
      - ENVIRONMENT=production
      - DATABASE_PATH=/app/data/seasondiy.db
    networks:
      - seasondiy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend service
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: seasondiy-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - seasondiy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: seasondiy-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - seasondiy-network
    restart: unless-stopped
    profiles:
      - production

networks:
  seasondiy-network:
    driver: bridge
    name: seasondiy-network

volumes:
  backend-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../backend/data
  backend-assets:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../backend/assets
